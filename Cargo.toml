# cargo build --release --target=x86_64-unknown-linux-musl
# cargo test -- --nocapture utils::unix_crypt::tests::test_rand_password
[package]
name = "sysapi"
version = "0.7.5"
authors = ["kiven <kivensoft@gmail.com>"]
edition = "2021"
description = "system api for application"
repository = "https://github.com/kivensoft/sysapi"
build = "build.rs"

[profile.release]
opt-level = 'z'  # Optimize for size
lto = true
strip = true
codegen-units = 1
incremental = false
panic = 'abort'

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
# default = ["fast_qr"]
default = ["multi_thread"]
multi_thread = []

[dependencies]
tokio = { version = "1.40", features = ["full"] } # 最流行的异步io库
hyper = { version = "1.4", features = ["http1", "client"] } # 最流行的底层http协议库
hyper-util = { version = "0.1", features = [ "client", "client-legacy" ] }
http-body-util = "0.1" # hyper库的body扩展
serde = { version = "1.0", features = ["derive", "rc"] } # 最流行的序列化反序列化库
serde_json = "1.0" # 最流行的json序列化反序列化库
serde_repr = "0.1" # 将枚举序列化和反序列化成整数
form_urlencoded = "1.2" # url编解码库
cookie = { version = "0.18", features = ["percent-encode"] } # http cookie库
base64 = "0.22" # base64编解码库
md5 = "0.7" # md5算法库
anyhow_ext = "0.2" # 最流行的错误处理库
log = "0.4" # 日志门面库，官方标准
cfg-if = "1.0" # 条件编译宏
# chrono = { version = "0.4", features = ["serde"] } # 最流行的日期时间库
time = { version = "0.3", features = ["formatting", "parsing", "macros", "serde"] } # 官方推荐的日期时间库
async-trait = "0.1" # trait的异步函数声明库
futures = "0.3" # 异步编程的官方库
futures-util = "0.3" # 异步扩展库
# compact_str = { version = "0.8", features = ["serde", "bytes"] } # 短字符串存储在栈中的string替代品
# faststr = { version = "0.2", features = ["serde", "redis", "itoa"]}
parking_lot = "0.12" # 性能更好的替代标准库Mutex/RwLock的三方库
triomphe = "0.1" # 比标准库的Arc更轻量的替代类
rand = "0.8" # 最广泛使用的随机数生成库
smallvec = { version = "1.13", features = ["write"] } # 基于栈的动态数组
smallstr = "0.3" # 基于栈的字符串
itoa = "1.0" # 非常快速的整数转字符串库
mini-moka = "0.10" # 轻量级缓存库，rust版本的Caffeine实现
dashmap = "6.1" # 高性能线程安全map
fnv = "1.0" # 比标准库使用的hash更快，适用小数据量
arc-swap = "1.7" # 类似Arc<T>的高性能库
deadpool-redis = { version = "0.18" } # redis 连接池
# flate2 = { version = "1.0" } # 纯rust实现的gzip压缩库
fast_qr = { version = "0.12", features = ["image"], optional = true } # 最快速的二维码生成器
lz4_flex = "0.11" # 最快速的压缩算法

# 支持命令行参数解析和配置文件参数解析的库
appcfg = { version = "1.0", features = ["chinese"] }
# 支持终端ansi颜色的库
ansicolor = "1.0"
# 支持同步和异步两种方式的迷你日志实现库
asynclog = { version = "1", features = ["tokio"] }
# 本地时间序列化反序列化库
localtime = { features = ["mysql_common"], git = "https://gitee.com/kivensoft/localtime_rs.git" }
# 迷你的http库
jwt = { git = "https://gitee.com/kivensoft/jwt_rs.git" }
# 迷你的http库
httpserver = { path = "httpserver", features = ["websocket"] }
# sql语句生成库
gensql = { path = "gensql" }
